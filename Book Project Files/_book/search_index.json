[
["purrr.html", "7 purrr 7.1 Overview 7.2 Map Family", " 7 purrr 7.1 Overview purrr enhances R’s functional programming (FP) toolkit by providing a complete and consistent set of tools for working with functions and vectors. If you’ve never heard of FP before, the best place to start is the family of map() functions which allow you to replace many for loops with code that is both more succinct and easier to read. 7.2 Map Family The complete list of functions within the map family are: map(.x, .f, ...) map_lgl(.x, .f, ...) map_chr(.x, .f, ...) map_int(.x, .f, ...) map_dbl(.x, .f, ...) map_dfr(.x, .f, ..., .id = NULL) map_dfc(.x, .f, ...) walk(.x, .f, ...) Arguments .x: A list or atomic vector .f: A function, formula, or atomic vector If .f is a function, it is used as is If .f is a formula, e.g. ~ .x + 2, it is converted to a function. There are three ways to refer to the arguments: For a single argument function, use . For a two argument function, use .x and .y For more arguments, use ..1, ..2, ..3, etc… 7.2.1 map The map function transforms the input, returning a vector of the same length as the input. map, along with reduce, appear to draw their inspiration from JavaScript. In R, map can be very useful when the programmers wants to use the same function on a list. dplyr has mutate for working with data frames, while purrr specializes in lists. "]
]
